version: "3.9"
services:
  minio:
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./tmp-data/minio:/data
    environment:
      - MINIO_ROOT_USER=access-key
      - MINIO_ROOT_PASSWORD=secret-key
      - MINIO_REGION=us-west-2
    command: server /data --console-address ":9001"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=root
    ports:
      - "5050:80"
    volumes:
      - ./tmp-data/pgadmin:/var/lib/pgadmin
    command: sh -c "chown -R 5050:5050 tmp-data/pgadmin"

  proxy:
    image: "traefik:v2.7"
    command:
      # - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"


  rest-api-db:
    image: postgres:14.4-bullseye
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=UserApps
      - POSTGRES_HOST_AUTH_METHOD=md5
    ports:
      - "5434:5432"
    volumes:
      - ./tmp-data/rest-api-db:/var/lib/postgresql/data
    depends_on:
      - pgadmin


  rest-api:
    build: ./Django_Apps
    volumes:
      - ./Django_Apps:/app
    ports:
      - 8000:8000
    environment:
      - DJANGO_SETTINGS_MODULE=UserRegister.settings.development
      - DB_NAME=UserApps
      - DB_USER=postgres
      - DB_PASSWORD=root
      - DB_HOST=rest-api-db
      - DB_PORT=5432
      - MINIO_URL=minio
      - ACCESS_KEY=access-key
      - SECRET_KEY=secret-key
      - STRIPE_PUBLIC_KEY=pk_test_KEY
      - STRIPE_SECRET_KEY=sk_test_KEY
      - SENDGRID_KEY=SG.TestKey
      - OVERDUE_TEMPLATE=d-templateId
    depends_on:
      - rest-api-db
      - proxy
      - pgadmin
      - minio
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
      - "traefik.http.routers.api.rule=Host(`local-api.userapp.com`)"
    command: bash -c "pipenv install --dev --verbose --system && python manage.py collectstatic --noinput && bash ./docker/run.sh"

  front-end:
    build: ./AngularApp
    volumes:
      - ./AngularApp:/app
    ports:
      - 4200:4200
    environment:
      - REST_API_URL=http://local-app.userapp.com/api/v1/
    depends_on:
      - rest-api
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.web.loadbalancer.server.port=4200"
      - "traefik.http.routers.web.rule=Host(`local-app.userapp.com`)"
    command: bash -c "npm install && bash ./docker/run.sh"


